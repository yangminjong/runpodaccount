name: Deploy to RunPod

on:
  push:
    branches: [ develop ]
  workflow_dispatch:

env:
  DOCKER_REGISTRY: docker.io
  IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/exaone-accounting

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: |
          ${{ env.IMAGE_NAME }}:latest
          ${{ env.IMAGE_NAME }}:${{ github.sha }}
        cache-from: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache
        cache-to: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache,mode=max
    
    - name: Deploy to RunPod
      env:
        RUNPOD_API_KEY: ${{ secrets.RUNPOD_API_KEY }}
        HF_TOKEN: ${{ secrets.HF_TOKEN }}
      run: |
        # Install RunPod CLI
        pip install runpod
        
        # Deploy using RunPod API
        python -c "
        import runpod
        import os
        
        runpod.api_key = os.environ['RUNPOD_API_KEY']
        
        # Create or update serverless endpoint
        endpoint = runpod.serverless.create_endpoint(
            name='exaone-accounting',
            docker_image='${{ env.IMAGE_NAME }}:${{ github.sha }}',
            gpu_types=['NVIDIA A100', 'NVIDIA RTX 6000', 'NVIDIA A6000', 'NVIDIA A40', 'NVIDIA RTX 4090'],
            env_vars={
                'HF_TOKEN': os.environ['HF_TOKEN'],
                'HF_HOME': '/runpod-volume/hf_cache'
            },
            scaling_config={
                'min_workers': 0,
                'max_workers': 5
            }
        )
        
        print(f'Endpoint deployed: {endpoint}')
        "